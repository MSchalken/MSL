package music_specification_language.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Clip;
  private ConceptPresentation props_Instrument;
  private ConceptPresentation props_MSLProgram;
  private ConceptPresentation props_Segment;
  private ConceptPresentation props_segment_clip;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Clip:
        if (props_Clip == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("A clip containing a music pattern for a single instrument");
          cpb.presentationByName();
          props_Clip = cpb.create();
        }
        return props_Clip;
      case LanguageConceptSwitch.Instrument:
        if (props_Instrument == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("Declaration of a single instrument");
          cpb.presentationByName();
          props_Instrument = cpb.create();
        }
        return props_Instrument;
      case LanguageConceptSwitch.MSLProgram:
        if (props_MSLProgram == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_MSLProgram = cpb.create();
        }
        return props_MSLProgram;
      case LanguageConceptSwitch.Segment:
        if (props_Segment == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.shortDesc("A segment of the music piece");
          cpb.presentationByName();
          props_Segment = cpb.create();
        }
        return props_Segment;
      case LanguageConceptSwitch.segment_clip:
        if (props_segment_clip == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xf9e4b29d3c894af7L, 0x8f5f5c06b22ba00bL, 0x552bfe4802320cecL, 0x552bfe4802320cf5L, "clip", "", "");
          props_segment_clip = cpb.create();
        }
        return props_segment_clip;
    }
    return null;
  }
}
